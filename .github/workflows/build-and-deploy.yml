name: Build and deploy to nais
on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      imageSuffix:
        required: true
        type: string
      appOrigin:
          required: true
          type: string
      REACT_APP_VERSION:
          required: true
          type: string
      REACT_APP_DINE_SAKER_URL:
          required: true
          type: string
      REACT_APP_PDL_URL:
          required: true
          type: string
      REACT_APP_SKJERMING_URL:
          required: true
          type: string
      REACT_APP_URL:
          required: true
          type: string
      REACT_APP_API_URL:
          required: true
          type: string
      REACT_APP_DSOP_URL:
          required: true
          type: string
      REACT_APP_TJENESTER_URL:
          required: true
          type: string
      REACT_APP_LOGIN_URL:
          required: true
          type: string
      REACT_APP_DITT_NAV_URL:
          required: true
          type: string
      REACT_APP_PENSJONSOPPTJENING_URL:
          required: true
          type: string
      REACT_APP_INNLOGGINGSSTATUS_URL:
          required: true
          type: string
      REACT_APP_TELEMETRY_URL:
          required: true
          type: string
    secrets:
      READER_TOKEN:
        required: true
      NAIS_WORKLOAD_IDENTITY_PROVIDER:
        required: true

jobs:
  build-and-deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    environment: ${{ inputs.env }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'
      - name: Define build environment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          IMAGE_VERSION_RAW=$(echo ${GITHUB_WORKFLOW})-$(echo ${GITHUB_SHA})
          echo "CI=true" >> $GITHUB_ENV
          echo "IMAGE_REGISTRY=ghcr.io/$(echo ${GITHUB_REPOSITORY})" >> $GITHUB_ENV
          echo "IMAGE_NAME=$(echo ${GITHUB_REPOSITORY##*/})" >> $GITHUB_ENV
          echo "IMAGE_VERSION=${IMAGE_VERSION_RAW,,}" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=$(echo ${GITHUB_TOKEN})" >> $GITHUB_ENV
          echo "PUBLIC_URL=https://cdn.nav.no/personbruker/personopplysninger/$(echo ${IMAGE_VERSION_RAW,,})/build" >> $GITHUB_ENV
      - name: Define client-side environment
        run: |
          echo "REACT_APP_MILJO=${{ inputs.env }}" >> $GITHUB_ENV
          echo "REACT_APP_VERSION=${{ inputs.REACT_APP_VERSION }}" >> $GITHUB_ENV
          echo "REACT_APP_DINE_SAKER_URL=${{ inputs.REACT_APP_DINE_SAKER_URL }}" >> $GITHUB_ENV
          echo "REACT_APP_PDL_URL=${{ inputs.REACT_APP_PDL_URL }}" >> $GITHUB_ENV
          echo "REACT_APP_SKJERMING_URL=${{ inputs.REACT_APP_SKJERMING_URL }}" >> $GITHUB_ENV
          echo "REACT_APP_URL=${{ inputs.REACT_APP_URL }}}" >> $GITHUB_ENV
          echo "REACT_APP_API_URL=${{ inputs.REACT_APP_API_URL }}" >> $GITHUB_ENV
          echo "REACT_APP_DSOP_URL=${{ inputs.REACT_APP_DSOP_URL }}" >> $GITHUB_ENV
          echo "REACT_APP_TJENESTER_URL=${{ inputs.REACT_APP_TJENESTER_URL }}" >> $GITHUB_ENV
          echo "REACT_APP_LOGIN_URL=${{ inputs.REACT_APP_LOGIN_URL }}" >> $GITHUB_ENV
          echo "REACT_APP_DITT_NAV_URL=${{ inputs.REACT_APP_DITT_NAV_URL }}" >> $GITHUB_ENV
          echo "REACT_APP_PENSJONSOPPTJENING_URL=${{ inputs.REACT_APP_PENSJONSOPPTJENING_URL }}" >> $GITHUB_ENV
          echo "REACT_APP_INNLOGGINGSSTATUS_URL=${{ inputs.REACT_APP_INNLOGGINGSSTATUS_URL }}" >> $GITHUB_ENV
          echo "REACT_APP_TELEMETRY_URL=${{ inputs.REACT_APP_TELEMETRY_URL }}" >> $GITHUB_ENV
      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Running tests
        run: npm test
      - name: Build application
        run: npm run build
      - name: Upload assets to CDN
        id: upload
        uses: navikt/frontend/actions/cdn-upload/v1@main
        with:
          cdn-team-name: personbruker
          source: ./build
          destination: personopplysninger/${{ env.IMAGE_VERSION }}
      - run: echo Uploaded file to CDN ${{ steps.upload.outputs.uploaded }}
      - name: Build and push docker image
        uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: personbruker
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          image_suffix: ${{ inputs.imageSuffix }}
      - name: Deploy to nais
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: ${{ inputs.env }}-gcp
          RESOURCE: .nais/config.yml
          VAR: image=${{ steps.docker-push.outputs.image }}
          VARS: .nais/vars-${{ inputs.env }}.yml